<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 环信用户表（客服使用） -->
<mapper namespace="com.buit.commons.dao.MpEasemobUserDao">

    <!-- 用于select查询公用抽取的列 -->
    <sql id="columns">
        ID as id,USERNAME as username,PASSWORD as password,NICKNAME as nickname,UUID as uuid,ACTIVATED as activated,CREATED as created,MODIFIED as modified,TYPE as type,USERTYPE as usertype,USERID as userid,STATE as state,CREATE_USER_ID as createUserId,CREATE_TIME as createTime,UPDATE_USER_ID as updateUserId,UPDATE_TIME as updateTime
    </sql>

    <!-- 用于select查询公用抽取的列(不显示密码列) -->
    <sql id="columnForNoPassWord">
        ID as id,USERNAME as username,NICKNAME as nickname,UUID as uuid,ACTIVATED as activated,CREATED as created,MODIFIED as modified,TYPE as type,USERTYPE as usertype,USERID as userid,STATE as state,CREATE_USER_ID as createUserId,CREATE_TIME as createTime,UPDATE_USER_ID as updateUserId,UPDATE_TIME as updateTime
    </sql>

    <insert id="insert">
        INSERT INTO MP_EASEMOB_USER (
            ID ,
            USERNAME ,
            PASSWORD ,
            NICKNAME ,
            UUID ,
            ACTIVATED ,
            CREATED ,
            MODIFIED ,
            TYPE ,
            USERTYPE ,
            USERID ,
            STATE ,
            CREATE_USER_ID ,
            CREATE_TIME ,
            UPDATE_USER_ID ,
            UPDATE_TIME
        ) VALUES (
            #{id} ,
            #{username} ,
            #{password} ,
            #{nickname} ,
            #{uuid} ,
            #{activated} ,
            #{created} ,
            #{modified} ,
            #{type} ,
            #{usertype} ,
            #{userid} ,
            #{state} ,
            #{createUserId} ,
            #{createTime} ,
            #{updateUserId} ,
            #{updateTime}
        )
    </insert>

    <update id="update" >
        UPDATE MP_EASEMOB_USER SET
            USERNAME = #{username} ,
            PASSWORD = #{password} ,
            NICKNAME = #{nickname} ,
            UUID = #{uuid} ,
            ACTIVATED = #{activated} ,
            CREATED = #{created} ,
            MODIFIED = #{modified} ,
            TYPE = #{type} ,
            USERTYPE = #{usertype} ,
            USERID = #{userid} ,
            CREATE_USER_ID = #{createUserId} ,
            CREATE_TIME = #{createTime} ,
            UPDATE_USER_ID = #{updateUserId} ,
            UPDATE_TIME = #{updateTime}
        WHERE
            ID = #{id}
    </update>

    <delete id="deleteById">
        DELETE FROM MP_EASEMOB_USER WHERE
        ID = #{id}
    </delete>

    <delete id="removeByEntity">
        DELETE FROM MP_EASEMOB_USER <include refid="where"/>
    </delete>

    <select id="getById" resultType="MpEasemobUser">
        SELECT <include refid="columns" />
            FROM MP_EASEMOB_USER
            WHERE
        ID = #{id}
    </select>

    <sql id="where">
        <where>
<!--                <if test="@sqlt.Ognl@isNotEmpty(id)"> -->
<!--                     AND ID = #{id} -->
<!--                </if> -->
<!--                <if test="@sqlt.Ognl@isNotEmpty(username)"> -->
<!--                     AND USERNAME = #{username} -->
<!--                </if> -->
<!--                <if test="@sqlt.Ognl@isNotEmpty(password)"> -->
<!--                     AND PASSWORD = #{password} -->
<!--                </if> -->
<!--                <if test="@sqlt.Ognl@isNotEmpty(nickname)"> -->
<!--                     AND NICKNAME = #{nickname} -->
<!--                </if> -->
<!--                <if test="@sqlt.Ognl@isNotEmpty(uuid)"> -->
<!--                     AND UUID = #{uuid} -->
<!--                </if> -->
<!--                <if test="@sqlt.Ognl@isNotEmpty(activated)"> -->
<!--                     AND ACTIVATED = #{activated} -->
<!--                </if> -->
<!--                <if test="@sqlt.Ognl@isNotEmpty(created)"> -->
<!--                     AND CREATED = #{created} -->
<!--                </if> -->
<!--                <if test="@sqlt.Ognl@isNotEmpty(modified)"> -->
<!--                     AND MODIFIED = #{modified} -->
<!--                </if> -->
<!--                <if test="@sqlt.Ognl@isNotEmpty(type)"> -->
<!--                     AND TYPE = #{type} -->
<!--                </if> -->
                <if test="@sqlt.Ognl@isNotEmpty(usertype)">
                     AND USERTYPE = #{usertype}
                </if>
<!--                <if test="@sqlt.Ognl@isNotEmpty(userid)"> -->
<!--                     AND USERID = #{userid} -->
<!--                </if> -->
<!--                <if test="@sqlt.Ognl@isNotEmpty(createUserId)"> -->
<!--                     AND CREATE_USER_ID = #{createUserId} -->
<!--                </if> -->
<!--                <if test="@sqlt.Ognl@isNotEmpty(createTime)"> -->
<!--                     AND CREATE_TIME = #{createTime} -->
<!--                </if> -->
<!--                <if test="@sqlt.Ognl@isNotEmpty(updateUserId)"> -->
<!--                     AND UPDATE_USER_ID = #{updateUserId} -->
<!--                </if> -->
<!--                <if test="@sqlt.Ognl@isNotEmpty(updateTime)"> -->
<!--                     AND UPDATE_TIME = #{updateTime} -->
<!--                </if> -->
        AND STATE = 1
        </where>
    </sql>

    <select id="findByEntityCount" resultType="long">
        SELECT count(*) FROM MP_EASEMOB_USER
        <include refid="where"/>
    </select>

    <select id="findByEntity" resultType="MpEasemobUser">
        SELECT <include refid="columnForNoPassWord" />
        FROM MP_EASEMOB_USER
        <include refid="where"/>
        ORDER BY CREATE_TIME desc
        <!--        <if test="@sqlt.Ognl@orderIsNotEmpty(sortColumns)">-->
<!--            ORDER BY ${sortColumns}-->
<!--        </if>-->
    </select>
    <!--     业务sql      -->
    <select id="easemobIsExit" resultType="com.buit.commons.model.MpEasemobUser">
        SELECT <include refid="columns" />
        FROM MP_EASEMOB_USER
        where USERID = #{userid} and STATE = 1
    </select>
    <select id="getEffectiveData" resultType="com.buit.commons.model.MpEasemobUser">
        SELECT <include refid="columns" />
        FROM MP_EASEMOB_USER
        where ACTIVATED = 'true' and USERTYPE = 1 and STATE = 1
    </select>

    <update id="updateZt">
        UPDATE MP_EASEMOB_USER SET
            ACTIVATED = #{activated} ,
            UPDATE_USER_ID = #{updateUserId} ,
            UPDATE_TIME = #{updateTime}
        WHERE
            ID = #{id}
    </update>

    <select id="getEaseMobUserByUserId" resultType="com.buit.commons.model.MpEasemobUser">
        SELECT <include refid="columns" />
        FROM MP_EASEMOB_USER
        where USERID = #{userid}
    </select>

    <update id="updateState">
        UPDATE MP_EASEMOB_USER SET
            STATE = #{state} ,
            UPDATE_USER_ID = #{updateUserId} ,
            UPDATE_TIME = #{updateTime}
        WHERE
            ID = #{id}
    </update>

    <select id="queryEasemobUser" resultType="com.buit.commons.model.MpEasemobUser">
        SELECT eauser.<include refid="columns" />,person.PERSONNAME as yhxm
        FROM MP_EASEMOB_USER eauser
        left join hr_personnel person on  eauser.USERID = person.PERSONID
        where 1=1
        <!--                <if test="@sqlt.Ognl@isNotEmpty(id)"> -->
        <!--                     AND ID = #{id} -->
        <!--                </if> -->
        <!--                <if test="@sqlt.Ognl@isNotEmpty(username)"> -->
        <!--                     AND USERNAME = #{username} -->
        <!--                </if> -->
        <!--                <if test="@sqlt.Ognl@isNotEmpty(password)"> -->
        <!--                     AND PASSWORD = #{password} -->
        <!--                </if> -->
        <!--                <if test="@sqlt.Ognl@isNotEmpty(nickname)"> -->
        <!--                     AND NICKNAME = #{nickname} -->
        <!--                </if> -->
        <!--                <if test="@sqlt.Ognl@isNotEmpty(uuid)"> -->
        <!--                     AND UUID = #{uuid} -->
        <!--                </if> -->
        <!--                <if test="@sqlt.Ognl@isNotEmpty(activated)"> -->
        <!--                     AND ACTIVATED = #{activated} -->
        <!--                </if> -->
        <!--                <if test="@sqlt.Ognl@isNotEmpty(created)"> -->
        <!--                     AND CREATED = #{created} -->
        <!--                </if> -->
        <!--                <if test="@sqlt.Ognl@isNotEmpty(modified)"> -->
        <!--                     AND MODIFIED = #{modified} -->
        <!--                </if> -->
        <!--                <if test="@sqlt.Ognl@isNotEmpty(type)"> -->
        <!--                     AND TYPE = #{type} -->
        <!--                </if> -->
        <if test="@sqlt.Ognl@isNotEmpty(usertype)">
            AND USERTYPE = #{usertype}
        </if>
        <!--                <if test="@sqlt.Ognl@isNotEmpty(userid)"> -->
        <!--                     AND USERID = #{userid} -->
        <!--                </if> -->
        <!--                <if test="@sqlt.Ognl@isNotEmpty(createUserId)"> -->
        <!--                     AND CREATE_USER_ID = #{createUserId} -->
        <!--                </if> -->
        <!--                <if test="@sqlt.Ognl@isNotEmpty(createTime)"> -->
        <!--                     AND CREATE_TIME = #{createTime} -->
        <!--                </if> -->
        <!--                <if test="@sqlt.Ognl@isNotEmpty(updateUserId)"> -->
        <!--                     AND UPDATE_USER_ID = #{updateUserId} -->
        <!--                </if> -->
        <!--                <if test="@sqlt.Ognl@isNotEmpty(updateTime)"> -->
        <!--                     AND UPDATE_TIME = #{updateTime} -->
        <!--                </if> -->
        AND STATE = 1
    </select>
</mapper>

